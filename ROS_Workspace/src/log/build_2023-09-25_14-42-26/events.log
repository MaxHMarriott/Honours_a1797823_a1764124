[0.000000] (-) TimerEvent: {}
[0.000947] (-) JobUnselected: {'identifier': 'Konig'}
[0.000997] (-) JobUnselected: {'identifier': 'UAVMain'}
[0.001032] (-) JobUnselected: {'identifier': 'UAVProcessing'}
[0.001064] (-) JobUnselected: {'identifier': 'UAVVision'}
[0.001469] (-) JobUnselected: {'identifier': 'UGV1Processing'}
[0.001537] (-) JobUnselected: {'identifier': 'UGV1Vision'}
[0.001597] (-) JobUnselected: {'identifier': 'UGV2Main'}
[0.001645] (-) JobUnselected: {'identifier': 'cameraPub'}
[0.002278] (-) JobUnselected: {'identifier': 'cameraSub'}
[0.003088] (-) JobUnselected: {'identifier': 'custom_msgs'}
[0.003156] (-) JobUnselected: {'identifier': 'custom_srvs'}
[0.003215] (-) JobUnselected: {'identifier': 'dynamixel_sdk'}
[0.003286] (-) JobUnselected: {'identifier': 'dynamixel_sdk_custom_interfaces'}
[0.003340] (-) JobUnselected: {'identifier': 'dynamixel_sdk_examples'}
[0.003392] (-) JobUnselected: {'identifier': 'localization_server'}
[0.003501] (-) JobUnselected: {'identifier': 'multi_turtlebot3_navigation'}
[0.003612] (-) JobUnselected: {'identifier': 'path_planner_server'}
[0.003725] (-) JobUnselected: {'identifier': 'tb3_0'}
[0.003811] (-) JobUnselected: {'identifier': 'tb3_1'}
[0.003919] (-) JobUnselected: {'identifier': 'turtlebot3'}
[0.003996] (-) JobUnselected: {'identifier': 'turtlebot3_bringup'}
[0.004048] (-) JobUnselected: {'identifier': 'turtlebot3_cartographer'}
[0.004129] (-) JobUnselected: {'identifier': 'turtlebot3_description'}
[0.004181] (-) JobUnselected: {'identifier': 'turtlebot3_example'}
[0.004336] (-) JobUnselected: {'identifier': 'turtlebot3_fake_node'}
[0.004392] (-) JobUnselected: {'identifier': 'turtlebot3_gazebo'}
[0.004451] (-) JobUnselected: {'identifier': 'turtlebot3_msgs'}
[0.004482] (-) JobUnselected: {'identifier': 'turtlebot3_navigation'}
[0.004581] (-) JobUnselected: {'identifier': 'turtlebot3_navigation2'}
[0.004654] (-) JobUnselected: {'identifier': 'turtlebot3_node'}
[0.004693] (-) JobUnselected: {'identifier': 'turtlebot3_simulations'}
[0.004727] (-) JobUnselected: {'identifier': 'turtlebot3_teleop'}
[0.004769] (UGV1Main) JobQueued: {'identifier': 'UGV1Main', 'dependencies': OrderedDict()}
[0.004848] (UGV1Main) JobStarted: {'identifier': 'UGV1Main'}
[0.099618] (-) TimerEvent: {}
[0.200053] (-) TimerEvent: {}
[0.300415] (-) TimerEvent: {}
[0.400955] (-) TimerEvent: {}
[0.501515] (-) TimerEvent: {}
[0.601922] (-) TimerEvent: {}
[0.689903] (UGV1Main) StderrLine: {'line': b'Traceback (most recent call last):\n  File "/usr/lib/python3/dist-packages/colcon_parallel_executor/executor/parallel.py", line 67, in execute\n    loop.run_until_complete(future)\n  File "/usr/lib/python3.8/asyncio/base_events.py", line 603, in run_until_complete\n    self.run_forever()\n  File "/usr/lib/python3.8/asyncio/base_events.py", line 570, in run_forever\n    self._run_once()\n  File "/usr/lib/python3.8/asyncio/base_events.py", line 1823, in _run_once\n    event_list = self._selector.select(timeout)\n  File "/usr/lib/python3.8/selectors.py", line 468, in select\n    fd_event_list = self._selector.poll(timeout, max_ev)\nKeyboardInterrupt\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File "/usr/lib/python3/dist-packages/colcon_core/executor/__init__.py", line 91, in __call__\n    rc = await self.task(*args, **kwargs)\n  File "/usr/lib/python3/dist-packages/colcon_core/task/__init__.py", line 93, in __call__\n    return await task_method(*args, **kwargs)\n  File "/usr/lib/python3/dist-packages/colcon_ros/task/ament_python/build.py", line 105, in build\n    return await extension.build(additional_hooks=additional_hooks)\n  File "/usr/lib/python3/dist-packages/colcon_core/task/python/build.py", line 81, in build\n    available_commands = await self._get_available_commands(\n  File "/usr/lib/python3/dist-packages/colcon_core/task/python/build.py", line 171, in _get_available_commands\n    output = await check_output(\n  File "/usr/lib/python3/dist-packages/colcon_core/subprocess.py", line 128, in check_output\n    assert not rc, f\'Expected {args} to pass: {stderr_data}\'\nAssertionError: Expected [\'/usr/bin/python3\', \'setup.py\', \'--help-commands\'] to pass: Traceback (most recent call last):\n  File "setup.py", line 1, in <module>\n    from setuptools import setup\n  File "/usr/lib/python3/dist-packages/setuptools/__init__.py", line 17, in <module>\n    import setuptools.version\n  File "/usr/lib/python3/dist-packages/setuptools/version.py", line 1, in <module>\n    import pkg_resources\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 3254, in <module>\n    def _initialize_master_working_set():\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 3237, in _call_aside\n    f(*args, **kwargs)\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 3289, in _initialize_master_working_set\n    list(map(working_set.add_entry, sys.path))\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 624, in add_entry\n    for dist in find_distributions(entry, True):\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 2066, in find_on_path\n    for dist in factory(fullpath):\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 2135, in distributions_from_metadata\n    yield Distribution.from_location(\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 2592, in from_location\n    return cls(\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 2996, in _reload_version\n    md_version = self._get_version()\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 2774, in _get_version\n    version = _version_from_file(lines)\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 2558, in _version_from_file\n    line = next(iter(version_lines), \'\')\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 2769, in _get_metadata\n    for line in self.get_metadata_lines(name):\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 1912, in get_metadata_lines\n    return yield_lines(self.get_metadata(name))\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 1899, in get_metadata\n    metadata = f.read()\n  File "/usr/lib/python3.8/codecs.py", line 324, in decode\n    self.buffer = data[consumed:]\nKeyboardInterrupt\n\n'}
[0.690787] (UGV1Main) JobEnded: {'identifier': 'UGV1Main', 'rc': 'SIGINT'}
[0.702054] (-) TimerEvent: {}
[0.708889] (-) EventReactorShutdown: {}
